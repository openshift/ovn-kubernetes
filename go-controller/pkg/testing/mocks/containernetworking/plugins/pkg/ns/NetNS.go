// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	ns "github.com/containernetworking/plugins/pkg/ns"
	mock "github.com/stretchr/testify/mock"
)

// NetNS is an autogenerated mock type for the NetNS type
type NetNS struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *NetNS) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Do provides a mock function with given fields: toRun
func (_m *NetNS) Do(toRun func(ns.NetNS) error) error {
	ret := _m.Called(toRun)

	var r0 error
	if rf, ok := ret.Get(0).(func(func(ns.NetNS) error) error); ok {
		r0 = rf(toRun)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Fd provides a mock function with given fields:
func (_m *NetNS) Fd() uintptr {
	ret := _m.Called()

	var r0 uintptr
	if rf, ok := ret.Get(0).(func() uintptr); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uintptr)
	}

	return r0
}

// Path provides a mock function with given fields:
func (_m *NetNS) Path() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Set provides a mock function with given fields:
func (_m *NetNS) Set() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
