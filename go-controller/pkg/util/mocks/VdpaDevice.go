// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	kvdpa "github.com/k8snetworkplumbingwg/govdpa/pkg/kvdpa"
	mock "github.com/stretchr/testify/mock"
)

// VdpaDevice is an autogenerated mock type for the VdpaDevice type
type VdpaDevice struct {
	mock.Mock
}

// Driver provides a mock function with given fields:
func (_m *VdpaDevice) Driver() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Driver")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MgmtDev provides a mock function with given fields:
func (_m *VdpaDevice) MgmtDev() kvdpa.MgmtDev {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for MgmtDev")
	}

	var r0 kvdpa.MgmtDev
	if rf, ok := ret.Get(0).(func() kvdpa.MgmtDev); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(kvdpa.MgmtDev)
		}
	}

	return r0
}

// Name provides a mock function with given fields:
func (_m *VdpaDevice) Name() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Name")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ParentDevicePath provides a mock function with given fields:
func (_m *VdpaDevice) ParentDevicePath() (string, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ParentDevicePath")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func() (string, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// VhostVdpa provides a mock function with given fields:
func (_m *VdpaDevice) VhostVdpa() kvdpa.VhostVdpa {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for VhostVdpa")
	}

	var r0 kvdpa.VhostVdpa
	if rf, ok := ret.Get(0).(func() kvdpa.VhostVdpa); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(kvdpa.VhostVdpa)
		}
	}

	return r0
}

// VirtioNet provides a mock function with given fields:
func (_m *VdpaDevice) VirtioNet() kvdpa.VirtioNet {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for VirtioNet")
	}

	var r0 kvdpa.VirtioNet
	if rf, ok := ret.Get(0).(func() kvdpa.VirtioNet); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(kvdpa.VirtioNet)
		}
	}

	return r0
}

// NewVdpaDevice creates a new instance of VdpaDevice. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewVdpaDevice(t interface {
	mock.TestingT
	Cleanup(func())
}) *VdpaDevice {
	mock := &VdpaDevice{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
