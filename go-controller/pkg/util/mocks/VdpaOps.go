// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	kvdpa "github.com/k8snetworkplumbingwg/govdpa/pkg/kvdpa"
	mock "github.com/stretchr/testify/mock"
)

// VdpaOps is an autogenerated mock type for the VdpaOps type
type VdpaOps struct {
	mock.Mock
}

// GetVdpaDeviceByPci provides a mock function with given fields: pciAddress
func (_m *VdpaOps) GetVdpaDeviceByPci(pciAddress string) (kvdpa.VdpaDevice, error) {
	ret := _m.Called(pciAddress)

	if len(ret) == 0 {
		panic("no return value specified for GetVdpaDeviceByPci")
	}

	var r0 kvdpa.VdpaDevice
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (kvdpa.VdpaDevice, error)); ok {
		return rf(pciAddress)
	}
	if rf, ok := ret.Get(0).(func(string) kvdpa.VdpaDevice); ok {
		r0 = rf(pciAddress)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(kvdpa.VdpaDevice)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(pciAddress)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewVdpaOps creates a new instance of VdpaOps. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewVdpaOps(t interface {
	mock.TestingT
	Cleanup(func())
}) *VdpaOps {
	mock := &VdpaOps{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
