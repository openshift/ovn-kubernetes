// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	types "k8s.io/apimachinery/pkg/types"
)

// Server is an autogenerated mock type for the Server type
type Server struct {
	mock.Mock
}

// SyncEndpoints provides a mock function with given fields: newEndpoints
func (_m *Server) SyncEndpoints(newEndpoints map[types.NamespacedName]int) error {
	ret := _m.Called(newEndpoints)

	var r0 error
	if rf, ok := ret.Get(0).(func(map[types.NamespacedName]int) error); ok {
		r0 = rf(newEndpoints)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SyncServices provides a mock function with given fields: newServices
func (_m *Server) SyncServices(newServices map[types.NamespacedName]uint16) error {
	ret := _m.Called(newServices)

	var r0 error
	if rf, ok := ret.Get(0).(func(map[types.NamespacedName]uint16) error); ok {
		r0 = rf(newServices)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewServer interface {
	mock.TestingT
	Cleanup(func())
}

// NewServer creates a new instance of Server. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewServer(t mockConstructorTestingTNewServer) *Server {
	mock := &Server{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
