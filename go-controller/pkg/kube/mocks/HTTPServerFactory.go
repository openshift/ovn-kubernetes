// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	healthcheck "github.com/ovn-org/ovn-kubernetes/go-controller/pkg/kube/healthcheck"

	mock "github.com/stretchr/testify/mock"
)

// HTTPServerFactory is an autogenerated mock type for the HTTPServerFactory type
type HTTPServerFactory struct {
	mock.Mock
}

// New provides a mock function with given fields: addr, handler
func (_m *HTTPServerFactory) New(addr string, handler http.Handler) healthcheck.HTTPServer {
	ret := _m.Called(addr, handler)

	var r0 healthcheck.HTTPServer
	if rf, ok := ret.Get(0).(func(string, http.Handler) healthcheck.HTTPServer); ok {
		r0 = rf(addr, handler)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(healthcheck.HTTPServer)
		}
	}

	return r0
}

type mockConstructorTestingTNewHTTPServerFactory interface {
	mock.TestingT
	Cleanup(func())
}

// NewHTTPServerFactory creates a new instance of HTTPServerFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHTTPServerFactory(t mockConstructorTestingTNewHTTPServerFactory) *HTTPServerFactory {
	mock := &HTTPServerFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
