// Code generated by mockery v2.4.0-beta. DO NOT EDIT.

package mocks

import (
	net "net"

	mock "github.com/stretchr/testify/mock"
)

// AddressSet is an autogenerated mock type for the AddressSet type
type AddressSet struct {
	mock.Mock
}

// AddIPs provides a mock function with given fields: ip
func (_m *AddressSet) AddIPs(ip []net.IP) error {
	ret := _m.Called(ip)

	var r0 error
	if rf, ok := ret.Get(0).(func([]net.IP) error); ok {
		r0 = rf(ip)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteIPs provides a mock function with given fields: ip
func (_m *AddressSet) DeleteIPs(ip []net.IP) error {
	ret := _m.Called(ip)

	var r0 error
	if rf, ok := ret.Get(0).(func([]net.IP) error); ok {
		r0 = rf(ip)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Destroy provides a mock function with given fields:
func (_m *AddressSet) Destroy() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetASHashNames provides a mock function with given fields:
func (_m *AddressSet) GetASHashNames() (string, string) {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 string
	if rf, ok := ret.Get(1).(func() string); ok {
		r1 = rf()
	} else {
		r1 = ret.Get(1).(string)
	}

	return r0, r1
}

// GetName provides a mock function with given fields:
func (_m *AddressSet) GetName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// SetIPs provides a mock function with given fields: ip
func (_m *AddressSet) SetIPs(ip []net.IP) error {
	ret := _m.Called(ip)

	var r0 error
	if rf, ok := ret.Get(0).(func([]net.IP) error); ok {
		r0 = rf(ip)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
